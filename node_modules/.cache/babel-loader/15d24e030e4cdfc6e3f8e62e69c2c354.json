{"ast":null,"code":"var _jsxFileName = \"/Users/dangngo/Desktop/aa/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { collection, query, where, getDocs, setDoc, doc, updateDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { async } from '@firebase/util';\nimport { useContext } from 'react';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useTransition } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n\n  const handleSelect = async () => {\n    //check whether the group (chats in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n\n    try {\n      const res = await getDocs(doc(db, \"chats\", combinedId));\n\n      if (!res.exists()) {\n        //Create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        }); //Create a user chat\n\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfor\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfor\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a user\",\n        onKeyDown: handleKey,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" User not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfor\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"ZXQzUE3EguMIuY/UQNcA26iC/M4=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/dangngo/Desktop/aa/src/components/Search.jsx"],"names":["React","useState","collection","query","where","getDocs","setDoc","doc","updateDoc","serverTimestamp","db","async","useContext","AuthContext","useTransition","Search","username","setUsername","user","setUser","err","setErr","currentUser","handleSearch","q","querySnapshot","forEach","data","handleKey","e","code","handleSelect","combinedId","uid","res","exists","messages","displayName","photoURL","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { collection, query, where, getDocs, setDoc, doc, updateDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\"\nimport { async } from '@firebase/util';\nimport { useContext } from 'react';\nimport { AuthContext } from \"../context/AuthContext\"\nimport { useTransition } from 'react';\nconst Search = () => {\n  const [username, setUsername] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [err, setErr] = useState(false)\n\n  const { currentUser } = useContext(AuthContext)\n\n  const handleSearch = async () => {\n    const q = query(\n      collection(db, \"users\"),\n      where(\"displayName\", \"==\", username)\n    );\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        setUser(doc.data())\n      });\n    } catch (err) {\n      setErr(true)\n    }\n  };\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n  const handleSelect = async () => {\n    //check whether the group (chats in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid \n    ? currentUser.uid + user.uid \n    : user.uid + currentUser.uid;\n    try{\n      const res = await getDocs(doc(db, \"chats\",combinedId));\n\n      if(!res.exists()){\n        //Create a chat in chats collection\n        await setDoc(doc(db,\"chats\", combinedId),{messages:[]});\n\n        //Create a user chat\n        await updateDoc(doc(db, \"userChats\", currentUser.uid),{\n          [combinedId+\".userInfor\"]:{\n            uid:user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId+\".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid),{\n          [combinedId+\".userInfor\"]:{\n            uid:currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId+\".date\"]: serverTimestamp()\n        });\n      }\n    }catch(err){}\n   \n    \n  }\n\n  return (\n    <div className='search'>\n      <div className=\"searchForm\">\n        <input type=\"text\" placeholder='Find a user' onKeyDown={handleKey} onChange={e => setUsername(e.target.value)} />\n      </div>\n      {err && <span> User not found!</span>}\n      {user && <div className=\"userChat\" onClick={handleSelect}>\n        <img src={user.photoURL}\n          alt=\"\" />\n        <div className=\"userChatInfor\">\n          <span>{user.displayName}</span>\n        </div>\n      </div>}\n    </div>\n  )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}