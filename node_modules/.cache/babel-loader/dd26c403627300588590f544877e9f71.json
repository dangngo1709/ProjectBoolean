{"ast":null,"code":"var _jsxFileName = \"/Users/dangngo/Desktop/aa/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [err, setErr] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      const storageRef = ref(storage, displayName);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on(error => {\n        setErr(true);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateProfile(res.user, {\n            displayName,\n            photoURL: downloadURL\n          });\n          await setDoc(doc(db, \"users\", res.user.uid), {\n            uid: res.user.uid,\n            displayName,\n            email,\n            photoURL: downloadURL\n          });\n          await setDoc(doc(db, \"userChats\", res.user.uid), {});\n          navigate(\"/\");\n        });\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \" Boolean Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \" Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have an account? Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"tRo8Xmj7+8+Jw1SuEQVFXjjmhP0=\", true);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/dangngo/Desktop/aa/src/pages/Login.jsx"],"names":["React","Login","err","setErr","useState","navigate","useNavigate","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","createUserWithEmailAndPassword","auth","storageRef","ref","storage","uploadTask","uploadBytesResumable","on","error","getDownloadURL","snapshot","then","downloadURL","updateProfile","user","photoURL","setDoc","doc","db","uid"],"mappings":"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","sourcesContent":["import React from 'react'\nconst Login = () => {\n\n  const [err, setErr] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password)\n\n\n      const storageRef = ref(storage, displayName);\n\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n\n      uploadTask.on(\n        (error) => {\n          setErr(true)\n        },\n        () => {\n\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            await updateProfile(res.user, {\n              displayName,\n              photoURL: downloadURL,\n\n            });\n            await setDoc(doc(db, \"users\", res.user.uid), {\n              uid: res.user.uid,\n              displayName,\n              email,\n              photoURL: downloadURL\n            })\n\n            await setDoc(doc(db, \"userChats\", res.user.uid), {});\n            navigate(\"/\");\n\n          });\n        }\n      );\n\n\n    } catch (err) {\n      setErr(true);\n\n    }\n\n\n  };\n  return (\n    <div className='formContainer'>\n\n        <div className='formWrapper'>\n            <span className=\"logo\"> Boolean Chat</span>\n            <span className=\"title\"> Register</span>\n\n            <form>\n            <input type=\"email\" placeholder=\"email\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            \n            <button>Sign in</button>\n            </form>\n            <p>You don't have an account? Register</p>\n        </div>\n    </div>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}